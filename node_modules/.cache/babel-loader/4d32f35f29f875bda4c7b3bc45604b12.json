{"ast":null,"code":"import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { ResumeComponent } from \"./resume/resume.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\"; // Any URL apart from the root domain is going to be rendered as \"page-not-found\".\n\nconst routes = [{\n  path: \"\",\n  component: ResumeComponent\n}, {\n  path: \"about\",\n  redirectTo: \"/#about\"\n}, {\n  path: \"experience\",\n  redirectTo: \"/#experience\"\n}, {\n  path: \"experiences\",\n  redirectTo: \"/#experience\"\n}, {\n  path: \"posts\",\n  redirectTo: \"/#posts\"\n}, {\n  path: \"**\",\n  redirectTo: \"/page-not-found\"\n}];\nexport class AppRoutingModule {}\nAppRoutingModule.ɵmod = i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = i0.ɵɵdefineInjector({\n  factory: function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  },\n  imports: [[RouterModule.forRoot(routes, {\n    // In order to get anchor / fragment scrolling to work at all, we need to\n    // enable it on the router.\n    anchorScrolling: \"enabled\",\n    // Once the above is enabled, the fragment link will only work on the\n    // first click. This is because, by default, the Router ignores requests\n    // to navigate to the SAME URL that is currently rendered. Unfortunately,\n    // the fragment scrolling is powered by Navigation Events. As such, we\n    // have to tell the Router to re-trigger the Navigation Events even if we\n    // are navigating to the same URL.\n    onSameUrlNavigation: \"reload\"\n  })], RouterModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  i0.ɵsetClassMetadata(AppRoutingModule, [{\n    type: NgModule,\n    args: [{\n      imports: [RouterModule.forRoot(routes, {\n        // In order to get anchor / fragment scrolling to work at all, we need to\n        // enable it on the router.\n        anchorScrolling: \"enabled\",\n        // Once the above is enabled, the fragment link will only work on the\n        // first click. This is because, by default, the Router ignores requests\n        // to navigate to the SAME URL that is currently rendered. Unfortunately,\n        // the fragment scrolling is powered by Navigation Events. As such, we\n        // have to tell the Router to re-trigger the Navigation Events even if we\n        // are navigating to the same URL.\n        onSameUrlNavigation: \"reload\"\n      })],\n      exports: [RouterModule]\n    }]\n  }], null, null);\n})();","map":{"version":3,"sources":["/Users/gracebrown/Desktop/hashtag_cyberstar/gracebrown03.github.io/src/app/app-routing.module.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,QAAyB,eAAzB;AACA,SAAiB,YAAjB,QAAqC,iBAArC;AACA,SAAS,eAAT,QAAgC,2BAAhC;;uCAEA;;AACA,MAAM,MAAM,GAAW,CACrB;AAAE,EAAA,IAAI,EAAE,EAAR;AAAY,EAAA,SAAS,EAAE;AAAvB,CADqB,EAErB;AAAE,EAAA,IAAI,EAAE,OAAR;AAAiB,EAAA,UAAU,EAAE;AAA7B,CAFqB,EAGrB;AAAE,EAAA,IAAI,EAAE,YAAR;AAAsB,EAAA,UAAU,EAAE;AAAlC,CAHqB,EAIrB;AAAE,EAAA,IAAI,EAAE,aAAR;AAAuB,EAAA,UAAU,EAAE;AAAnC,CAJqB,EAKrB;AAAE,EAAA,IAAI,EAAE,OAAR;AAAiB,EAAA,UAAU,EAAE;AAA7B,CALqB,EAMrB;AAAE,EAAA,IAAI,EAAE,IAAR;AAAc,EAAA,UAAU,EAAE;AAA1B,CANqB,CAAvB;AA6BA,OAAM,MAAO,gBAAP,CAAuB;;QAAhB;;;;qBAAA,gB;AAAgB,G;AAAA,EAAA,OAAA,EAAA,CAnBlB,CAAE,YAAY,CAAC,OAAb,CACT,MADS,EAET;AACE;AACA;AACA,IAAA,eAAe,EAAE,SAHnB;AAKE;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,mBAAmB,EAAE;AAXvB,GAFS,CAAF,CAmBkB,EAHhB,YAGgB;;;;2EAAhB,gB,EAAgB;AAAA,IAAA,OAAA,EAAA,CAAA,EAAA,CAAA,YAAA,CAAA;AAAA,IAAA,OAAA,EAAA,CAHhB,YAGgB;AAAA,G;AAHJ,C;;;;;uBAGZ,gB,EAAgB,CAAA;UApB5B,QAoB4B;WApBnB;AACR,MAAA,OAAO,EAAE,CAAE,YAAY,CAAC,OAAb,CACT,MADS,EAET;AACE;AACA;AACA,QAAA,eAAe,EAAE,SAHnB;AAKE;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,mBAAmB,EAAE;AAXvB,OAFS,CAAF,CADD;AAiBR,MAAA,OAAO,EAAE,CAAE,YAAF;AAjBD,K;AAoBmB,GAAA,C","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ResumeComponent } from \"./resume/resume.component\";\n\n// Any URL apart from the root domain is going to be rendered as \"page-not-found\".\nconst routes: Routes = [\n  { path: \"\", component: ResumeComponent},\n  { path: \"about\", redirectTo: \"/#about\"},\n  { path: \"experience\", redirectTo: \"/#experience\"},\n  { path: \"experiences\", redirectTo: \"/#experience\"},\n  { path: \"posts\", redirectTo: \"/#posts\"},\n  { path: \"**\", redirectTo: \"/page-not-found\" }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(\n    routes,\n    {\n      // In order to get anchor / fragment scrolling to work at all, we need to\n      // enable it on the router.\n      anchorScrolling: \"enabled\",\n\n      // Once the above is enabled, the fragment link will only work on the\n      // first click. This is because, by default, the Router ignores requests\n      // to navigate to the SAME URL that is currently rendered. Unfortunately,\n      // the fragment scrolling is powered by Navigation Events. As such, we\n      // have to tell the Router to re-trigger the Navigation Events even if we\n      // are navigating to the same URL.\n      onSameUrlNavigation: \"reload\"\n    }\n  )],\n  exports: [ RouterModule ]\n})\n\nexport class AppRoutingModule { }\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}