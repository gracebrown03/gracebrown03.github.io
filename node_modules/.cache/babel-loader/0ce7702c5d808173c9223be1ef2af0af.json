{"ast":null,"code":"import { Injectable } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport class SorterService {\n  constructor() {\n    this.property = null;\n    this.direction = 1;\n  }\n\n  sort(key, order = \"asc\") {\n    return (a, b) => {\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n        // property doesn't exist on either object\n        return 0;\n      }\n\n      const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\n      const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\n      let comparison = 0;\n\n      if (varA > varB) {\n        comparison = 1;\n      } else if (varA < varB) {\n        comparison = -1;\n      }\n\n      return order === \"desc\" ? comparison * -1 : comparison;\n    };\n  }\n\n}\n\nSorterService.ɵfac = function SorterService_Factory(t) {\n  return new (t || SorterService)();\n};\n\nSorterService.ɵprov = i0.ɵɵdefineInjectable({\n  token: SorterService,\n  factory: SorterService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  i0.ɵsetClassMetadata(SorterService, [{\n    type: Injectable\n  }], null, null);\n})();","map":{"version":3,"sources":["/Users/gracebrown/live-resume/src/app/core/sorter.service.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,QAA2B,eAA3B;;AAGA,OAAM,MAAO,aAAP,CAAoB;AAD1B,EAAA,WAAA,GAAA;AAGC,SAAA,QAAA,GAAmB,IAAnB;AACA,SAAA,SAAA,GAAoB,CAApB;AAyBA;;AAvBC,EAAA,IAAI,CAAC,GAAD,EAAe,KAAA,GAAgB,KAA/B,EAAoC;AACtC,WAAO,CAAC,CAAD,EAAS,CAAT,KAAmB;AACxB,UAAI,CAAC,CAAC,CAAC,cAAF,CAAiB,GAAjB,CAAD,IAA0B,CAAC,CAAC,CAAC,cAAF,CAAiB,GAAjB,CAA/B,EAAsD;AACpD;AACA,eAAO,CAAP;AACD;;AAED,YAAM,IAAI,GAAI,OAAO,CAAC,CAAC,GAAD,CAAR,KAAkB,QAAnB,GACT,CAAC,CAAC,GAAD,CAAD,CAAO,WAAP,EADS,GACc,CAAC,CAAC,GAAD,CAD5B;AAEA,YAAM,IAAI,GAAI,OAAO,CAAC,CAAC,GAAD,CAAR,KAAkB,QAAnB,GACT,CAAC,CAAC,GAAD,CAAD,CAAO,WAAP,EADS,GACc,CAAC,CAAC,GAAD,CAD5B;AAGA,UAAI,UAAU,GAAG,CAAjB;;AACA,UAAI,IAAI,GAAG,IAAX,EAAiB;AACf,QAAA,UAAU,GAAG,CAAb;AACD,OAFD,MAEO,IAAI,IAAI,GAAG,IAAX,EAAiB;AACtB,QAAA,UAAU,GAAG,CAAC,CAAd;AACD;;AACD,aACG,KAAK,KAAK,MAAX,GAAsB,UAAU,GAAG,CAAC,CAApC,GAAyC,UAD3C;AAGD,KApBD;AAqBD;;AA3BuB;;;mBAAb,a;AAAa,C;;;SAAb,a;AAAa,EAAA,OAAA,EAAb,aAAa,CAAA;;;;;uBAAb,a,EAAa,CAAA;UADzB;AACyB,GAAA,C","sourcesContent":["import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class SorterService {\n\n\tproperty: string = null;\n\tdirection: number = 1;\n\n  sort(key: string , order: string = \"asc\") {\n    return (a: any, b: any) => {\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n        // property doesn't exist on either object\n        return 0;\n      }\n  \n      const varA = (typeof a[key] === \"string\")\n        ? a[key].toUpperCase() : a[key];\n      const varB = (typeof b[key] === \"string\")\n        ? b[key].toUpperCase() : b[key];\n  \n      let comparison = 0;\n      if (varA > varB) {\n        comparison = 1;\n      } else if (varA < varB) {\n        comparison = -1;\n      }\n      return (\n        (order === \"desc\") ? (comparison * -1) : comparison\n      );\n    };\n  }\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}